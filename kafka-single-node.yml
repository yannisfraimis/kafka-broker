version: '2'
services:

#Zookeeper Service.
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    restart: "no"
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    container_name: zookeeper

#Kafka Service
  kafka:
    image: 'bitnami/kafka:latest'
    restart: "no"
    ports:
      - '9092:9092'
      - '29092:29092'
      
    environment:
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    container_name: kafka-broker
    #entrypoint: /opt/bitnami/kafka/bin/kafka-topics.sh --create --topic calls --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1
      
    depends_on:
      - "zookeeper"
    

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # List topics:
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topic calls'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic calls --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topic:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  producer:
    build: producer/
    ports:
      - 5001:5001 
    container_name: kafka-producer
    restart: on-failure:3
    depends_on:
      - "consumer"
     

  consumer:
    build: consumer/
    ports:
      - 5000:5000
    environment:
      - PYTHONUNBUFFERED=1
    
    container_name: kafka-consumer 
    restart: on-failure:3
    depends_on:
      - "init-kafka"
